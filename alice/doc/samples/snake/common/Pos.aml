(* Alice Snake 2.0 - Operations on Positions
 *
 *  Authors: Benedikt Grundmann / Sebastian Germesin
 *
 *  $Revision$
 *
 *  Last updated: $Date$ by $Author$
 * 
 *
 *)

import signature POS from "POS-sig"


structure Pos :> POS =
struct
    (** The type of a position on the arena.
        It's in row - major order (i.e. row X column)
        with (0,0) denoting the upper left corner 
      *)
    type pos = int * int

    (* absolute (i.e screen not snake relativ) *)
    datatype direction =
        UP
      | DOWN
      | LEFT
      | RIGHT

    fun row (r, _) = r
    (** [row = #1] *)
    
    fun column (_, c) = c
    (** [columns = #2] *)

    fun above (r, c) = (r-1, c)
    (** [above (r, c) = (r - 1, c)] *)
    
    fun below (r, c) = (r+1, c)
    (** [below (r, c) = (r + 1, c)] *)
    
    fun left (r, c) = (r, c - 1)
    (** [left (r, c) = (r, c - 1)] *)
    
    fun right (r, c) = (r, c + 1)
    (** [left (r, c) = (r, c + 1)] *)

    fun move (p, d) =
        case d of
            UP      => above p
        |   DOWN    => below p
        |   LEFT    => left p
        |   RIGHT   => right p

    fun moveBy ((r,c), d, l) =
        case d of
            UP      => (r - l, c)
        |   DOWN    => (r + l, c)
        |   LEFT    => (r, c - l)
        |   RIGHT   => (r, c + l)

    fun inside ((r1, c1),(r2, c2)) (r, c) = 
	if r1 > r2 orelse 
	   c1 > c2 orelse 
	  (r1 = r2 andalso c1 = c2)
	    then false 
	else
	    (r1 <= r) andalso 
	    (r <= r2) andalso 
	    (c1 <= c) andalso 
	    (c <= c2)
    (** [inside (lower, upper) p] returns true if p is contained inside 
        of the rectangle given by [lower] and [upper].  If this rectangle
        is empty, i.e either [#row upper < #row lower] or 
        [#column upper < #column lower] or both [false] is always returned.
      *)

end