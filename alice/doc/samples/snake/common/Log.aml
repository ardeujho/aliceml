(* Alice Snake 2.0 - Logging (debug) functions
 *
 *  Authors: Benedikt Grundmann / Sebastian Germesin
 *
 *  $Revision$
 *
 *  Last updated: $Date$ by $Author$
 * 
 *
 *)

import structure PrettyPrint    from "x-alice:/lib/utility/PrettyPrint"
import structure Stream         from "x-alice:/lib/data/Stream"
import structure Ctrl           from "x-alice:/lib/utility/Ctrl"
import structure PPValue        from "x-alice:/lib/system/PPValue"

open Ctrl


local
    structure P = PrettyPrint

    val (stream, messages)    = Stream.stream () 

    fun logger []   = ()
    |   logger (msg :: msgs) =
        (P.output (TextIO.stdOut, msg, 70); logger msgs)

    val _ = ispawn (_file_, _line_) logger messages

in
    fun log' t (part, value) = 
        let
            val cb      = P.^/^
            val c       = P.^^
            val format  = { depth = 256, width = 512, prec = 4 }
        in
           
(*	    Inspector.inspect(part, value);
	    Stream.send (stream, c (cb (c (P.text part, P.text ":"),
	    PPValue.ppVal' t format value), P.text "\n"))*) ()
        end
end

__overload 'a log : string * 'a -> unit = log'
