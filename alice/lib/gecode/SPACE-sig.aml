(*
 * Author:
 *   Guido Tack <tack@ps.uni-sb.de>
 *
 * Copyright:
 *   Guido Tack, 2003
 *
 *  See the file "LICENSE" for information on usage and
 *  redistribution of this file, and for a
 *     DISCLAIMER OF ALL WARRANTIES.
 *
 * Last change:
 *   $Date$ by $Author$
 *   $Revision$
 *)

signature SPACE =
sig
    eqtype space
    eqtype description

    (* Exception thrown by all operations on spaces *)
    (* if the space has been discarded *)
    exception InvalidSpace

    (* Exception thrown by all operations on spaces *)
    (* if variable is used in a space where it is invalid *)
    exception InvalidVar

    exception Description

    exception InternalException

    datatype status = BRANCH of int * description | FAILED | SOLVED
    val new         : unit -> space
    val status      : space -> status
    
    val commit      : space * description * int -> unit
    val clone       : space -> space
    val discard     : space -> unit
    val alive       : space -> bool
    val fail        : space -> unit

    (* debugging *)
    (*val stamps  : space -> int * int*)
end
