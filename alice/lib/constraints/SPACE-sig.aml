(*
 * Authors:
 *   Thorsten Brunklaus <brunklaus@ps.uni-sb.de>
 *
 * Copyright:
 *   Thorsten Brunklaus, 2001
 *
 * Last Change:
 *   $Date$ by $Author$
 *   $Revision$
 *
 *)

signature SPACE =
    sig
	eqtype 'a space
	    
	datatype state =
	    MERGED
	  | FAILED
	  | SUCCEEDED
	  | ALTERNATIVES of int

	datatype verbose_state =
	    VERBOSE_SUSPENDED of verbose_state
	  | VERBOSE_MERGED
	  | VERBOSE_FAILED
	  | VERBOSE_SUCCEEDED_STUCK
	  | VERBOSE_SUCCEEDED_ENTAILED
	  | VERBOSE_ALTERNATIVES of int
	    
	datatype choice =
	    SINGLE of int
	  | RANGE of int * int
	    
	val space : (unit -> 'a) -> 'a space
	    
	val ask : 'a space -> state
	val askVerbose : 'a space -> verbose_state
	val clone : 'a space -> 'a space
	val commit : 'a space * choice -> unit
	val inject : 'a space * ('a -> unit) -> unit
	val merge : 'a space -> 'a
	val kill : 'a space -> unit
	val waitStable : 'a space -> unit
    end
