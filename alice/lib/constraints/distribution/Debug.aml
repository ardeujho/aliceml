structure Debug =
struct

    type db_mask = Word31.t

    infix &&
    infix ||
    fun a && b = Word31.andb (a,b)  (* AND two masks *)
    fun a || b = Word31.orb (a,b)   (* OR two masks *)

    (* Creates a new debug mask. *)
    fun newDB i = Word31.<< (Word.fromInt 1, Word.fromInt i)

    val dbExc    = newDB 0 (* Exceptions. Always printed. *)
    val dbCom    = newDB 1 (* Communication. *)
    val dbSearch = newDB 2 (* Search. *)
    val dbManag  = newDB 3 (* Management. *)
    val dbSlow   = newDB 4 (* Slow search. *)

    val dbZero = Word31.fromInt 0 (* Empty mask *)
    val dbNone = dbZero
    val dbAll  = Word31.notb dbZero (* Full mask *)

    (* Print the debug message according to the masks. *)
    fun dbPrint (mask1, mask2, message) =
	if Word31.compare (dbZero, mask1 && mask2) = EQUAL
	    then () else print message

end
